@model IEnumerable<RestaurantOrderingSystem.Models.Entities.Table>

@{
    ViewData["Title"] = "Masa Yönetimi";
}

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <h2><i class="bi bi-table"></i> Masa Yönetimi</h2>
            <div>
                <a asp-action="TableLayout" class="btn btn-primary me-2">
                    <i class="bi bi-grid-3x3"></i> Masa Düzeni
                </a>
                <a asp-action="CreateTable" class="btn btn-success">
                    <i class="bi bi-plus"></i> Yeni Masa
                </a>
            </div>
        </div>
        <hr />
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Masa No</th>
                                <th>Kapasite</th>
                                <th>Durum</th>
                                <th>Atanmış Garson</th>
                                <th>Son Güncelleme</th>
                                <th>İşlemler</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var table in Model.OrderBy(t => t.Number))
                            {
                                <tr>
                                    <td>
                                        <strong>@table.Number</strong>
                                    </td>
                                    <td>
                                        <i class="bi bi-people"></i> @table.Capacity kişi
                                    </td>
                                    <td>
                                        <span class="badge bg-@GetStatusColor(table.Status)">
                                            @GetStatusText(table.Status)
                                        </span>
                                        @if (table.IsOccupied && table.OccupiedAt.HasValue)
                                        {
                                            <br>

                                            <small class="text-muted">@table.OccupiedAt.Value.ToString("HH:mm")'den beri</small>
                                        }
                                    </td>
                                    <td>
                                        @if (table.Server != null)
                                        {
                                            <span class="badge bg-primary">@table.Server.FullName</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Atanmamış</span>
                                        }
                                    </td>
                                    <td>
                                        <small class="text-muted">@table.CreatedAt.ToString("dd.MM.yyyy")</small>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            @if (table.IsOccupied)
                                            {
                                                <button class="btn btn-outline-warning btn-sm free-table" data-table-id="@table.Id">
                                                    <i class="bi bi-unlock"></i> Boşalt
                                                </button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-outline-success btn-sm occupy-table" data-table-id="@table.Id">
                                                    <i class="bi bi-lock"></i> İşgal Et
                                                </button>
                                            }
                                            <a asp-action="EditTable" asp-route-id="@table.Id" class="btn btn-outline-primary btn-sm">
                                                <i class="bi bi-pencil"></i> Düzenle
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Table management JavaScript
        document.addEventListener('click', async (e) => {
            if (e.target.closest('.free-table')) {
                const button = e.target.closest('.free-table');
                const tableId = button.dataset.tableId;
                await updateTableOccupancy(tableId, false);
            }

            if (e.target.closest('.occupy-table')) {
                const button = e.target.closest('.occupy-table');
                const tableId = button.dataset.tableId;
                await updateTableOccupancy(tableId, true);
            }
        });

        async function updateTableOccupancy(tableId, occupy) {
            try {
                const action = occupy ? 'Occupy' : 'Free';
                const response = await fetch(`/Table/${action}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `tableId=${tableId}`
                });

                if (response.ok) {
                    window.location.reload();
                }
            } catch (error) {
                console.error('Table occupancy update error:', error);
            }
        }
    </script>
}

@functions {
    private string GetStatusColor(RestaurantOrderingSystem.Models.Entities.TableStatus status)
    {
        return status switch
        {
            RestaurantOrderingSystem.Models.Entities.TableStatus.Available => "success",
            RestaurantOrderingSystem.Models.Entities.TableStatus.Occupied => "danger",
            RestaurantOrderingSystem.Models.Entities.TableStatus.Reserved => "warning",
            RestaurantOrderingSystem.Models.Entities.TableStatus.Cleaning => "info",
            RestaurantOrderingSystem.Models.Entities.TableStatus.OutOfService => "secondary",
            _ => "light"
        };
    }

    private string GetStatusText(RestaurantOrderingSystem.Models.Entities.TableStatus status)
    {
        return status switch
        {
            RestaurantOrderingSystem.Models.Entities.TableStatus.Available => "Müsait",
            RestaurantOrderingSystem.Models.Entities.TableStatus.Occupied => "Dolu",
            RestaurantOrderingSystem.Models.Entities.TableStatus.Reserved => "Rezerve",
            RestaurantOrderingSystem.Models.Entities.TableStatus.Cleaning => "Temizleniyor",
            RestaurantOrderingSystem.Models.Entities.TableStatus.OutOfService => "Servis Dışı",
            _ => "Bilinmiyor"
        };
    }
}