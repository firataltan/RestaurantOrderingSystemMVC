@model IEnumerable<RestaurantOrderingSystem.Models.Entities.Table>

@{
    ViewData["Title"] = "Masa Düzeni";
    var servers = ViewBag.Servers as IEnumerable<RestaurantOrderingSystem.Models.Entities.Server>;
}

<div class="row">
    <div class="col-12">
        <h2><i class="bi bi-table"></i> Masa Düzeni Yönetimi</h2>
        <p class="text-muted">Masaları sürükleyerek yerleştirin ve garson ataması yapın.</p>
        <hr />
    </div>
</div>

<div class="row">
    <div class="col-lg-9">
        <div class="card">
            <div class="card-header">
                <h5><i class="bi bi-grid-3x3"></i> Restoran Düzeni</h5>
                <small class="text-muted">Masaları sürükleyerek yeni konumlarına yerleştirebilirsiniz.</small>
            </div>
            <div class="card-body">
                <div id="restaurant-layout" style="position: relative; height: 600px; border: 2px dashed #dee2e6; background-color: #f8f9fa;">
                    @foreach (var table in Model)
                    {
                        <div class="table-item"
                             data-table-id="@table.Id"
                             style="position: absolute; left: @(table.PositionX)px; top: @(table.PositionY)px; cursor: move;"
                             draggable="true">
                            <div class="card table-card @GetTableStatusClass(table.Status)" style="width: 80px; height: 80px;">
                                <div class="card-body p-1 text-center">
                                    <small class="fw-bold">@table.Number</small><br>
                                    <small>@table.Capacity kişi</small><br>
                                    @if (table.Server != null)
                                    {
                                        <small class="text-primary">@table.Server.FirstName</small>
                                    }
                                    else
                                    {
                                        <small class="text-muted">Atanmamış</small>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-3">
        <div class="card">
            <div class="card-header">
                <h6><i class="bi bi-gear"></i> Masa Ayarları</h6>
            </div>
            <div class="card-body">
                <div id="table-details" class="d-none">
                    <h6 id="selected-table-name">Masa</h6>

                    <div class="mb-3">
                        <label class="form-label">Garson Ataması:</label>
                        <select id="server-select" class="form-select">
                            <option value="">Garson Seçin</option>
                            @foreach (var server in servers)
                            {
                                <option value="@server.Id">@server.FullName</option>
                            }
                        </select>
                        <button id="assign-server-btn" class="btn btn-sm btn-primary mt-2">
                            <i class="bi bi-person-check"></i> Ata
                        </button>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Masa Durumu:</label>
                        <select id="status-select" class="form-select">
                            <option value="1">Müsait</option>
                            <option value="2">Dolu</option>
                            <option value="3">Rezerve</option>
                            <option value="4">Temizleniyor</option>
                            <option value="5">Servis Dışı</option>
                        </select>
                        <button id="update-status-btn" class="btn btn-sm btn-warning mt-2">
                            <i class="bi bi-arrow-repeat"></i> Güncelle
                        </button>
                    </div>
                </div>

                <p class="text-muted" id="no-selection">Düzenlemek için bir masa seçin.</p>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h6><i class="bi bi-info-circle"></i> Durum Renkleri</h6>
            </div>
            <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                    <div class="bg-success" style="width: 20px; height: 20px; border-radius: 3px;"></div>
                    <span class="ms-2 small">Müsait</span>
                </div>
                <div class="d-flex align-items-center mb-2">
                    <div class="bg-danger" style="width: 20px; height: 20px; border-radius: 3px;"></div>
                    <span class="ms-2 small">Dolu</span>
                </div>
                <div class="d-flex align-items-center mb-2">
                    <div class="bg-warning" style="width: 20px; height: 20px; border-radius: 3px;"></div>
                    <span class="ms-2 small">Rezerve</span>
                </div>
                <div class="d-flex align-items-center mb-2">
                    <div class="bg-info" style="width: 20px; height: 20px; border-radius: 3px;"></div>
                    <span class="ms-2 small">Temizleniyor</span>
                </div>
                <div class="d-flex align-items-center">
                    <div class="bg-secondary" style="width: 20px; height: 20px; border-radius: 3px;"></div>
                    <span class="ms-2 small">Servis Dışı</span>
                </div>
            </div>
        </div>
    </div>
</div>

@* Anti-forgery token for AJAX requests *@
@Html.AntiForgeryToken()

@section Scripts {
    <script src="~/js/table-layout.js"></script>
}

@functions {
    private string GetTableStatusClass(RestaurantOrderingSystem.Models.Entities.TableStatus status)
    {
        return status switch
        {
            RestaurantOrderingSystem.Models.Entities.TableStatus.Available => "border-success",
            RestaurantOrderingSystem.Models.Entities.TableStatus.Occupied => "border-danger",
            RestaurantOrderingSystem.Models.Entities.TableStatus.Reserved => "border-warning",
            RestaurantOrderingSystem.Models.Entities.TableStatus.Cleaning => "border-info",
            RestaurantOrderingSystem.Models.Entities.TableStatus.OutOfService => "border-secondary",
            _ => "border-dark"
        };
    }
}